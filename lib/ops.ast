/*
   Copyright (C) 2009, 2010 Andreas Franz Borchert
   ----------------------------------------------------------------------------
   The Astl Library for C is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   The Astl Library for C is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
*/

opset parentheses = ["()"];

opset assignment_operators = [
   "=" "+=" "-=" "*=" "/=" "%=" "<<=" ">>=" "&=" "^=" "|="
];
opset comparison_operators = ["==" "!=" "<" ">" "<=" ">="];
opset logical_operators = ["||" "&&" "!"];
opset binary_operators = ["|" "^" "&" "~"];
opset arithmetic_operators = ["+" "-" "*" "/" "%"];
opset using_operators = ["conditional_expression" logical_operators
   binary_operators comparison_operators arithmetic_operators
   "cast_expression" "pointer_dereference" "unary+" "unary-"
   "prefix++" "prefix--" "{}" "postfix++" "postfix--"
   "function_call" "->" "." "[]"];
opset all_operators = ["," assignment_operators "conditional_expression"
   logical_operators binary_operators comparison_operators
   arithmetic_operators
   "cast_expression" "pointer_dereference" "&" "unary+" "unary-"
   "sizeof" "prefix++" "prefix--" "{}" "postfix++" "postfix--"
   "function_call" "->" "." "[]"];

operators {
   left ",";
   right assignment_operators;
   right "conditional_expression";
   left "||";
   left "&&";
   left "|";
   left "^";
   left "&";
   left "==" "!=";
   left "<" ">" "<=" ">=";
   left "<<" ">>";
   left "+" "-";
   left "*" "/" "%";

   right "cast_expression";
   right "pointer_dereference" "&"
	 "unary+" "unary-" "!" "~" "sizeof"
	 "prefix++" "prefix--";
   left "{}";
   left "postfix++" "postfix--" "function_call"
	 "->" "." "[]";
   nonassoc "label_as_value";
};
